{"version":3,"sources":["components/ProfileForm.js","api/index.js","components/ProfileFormAdd.js","actions/index.js","actions/constants.js","components/Header.js","components/ProfileItem.js","components/Image.js","components/ProfileFormEdit.js","components/ProfileList.js","App.js","reducers/profiles.js","reducers/index.js","index.js","assets/avatar-default.png"],"names":["ProfileForm","state","initState","setState","name","bio","fb_id","onChange","e","target","value","handleClick","props","handleSubmit","this","profile","id","className","mode","noValidate","autoComplete","TextField","label","Button","onClick","variant","color","React","Component","axios","create","baseURL","responseType","ProfileFormAdd","addNewProfile","connect","dispatch","a","api","post","result","type","payload","data","Header","AppBar","position","ProfileItem","handleEditClick","Paper","Image","onError","error","src","avatarDefault","fallbackSrc","style","width","height","borderRadius","ProfileFormEdit","handleCloseEdit","editProfile","getImageSrc","selectedProfile","getProfile","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","profileReducer","get","put","ProfileList","isEditOpen","cancelSelectedProfile","renderList","profiles","map","renderEditModal","getAllProfiles","length","App","INITIAL_STATE","rootReducers","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4482b72a.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nclass ProfileForm extends React.Component {\n\n    state={};\n    \n    initState=()=>{\n        this.setState({\n            name:\"\",\n            bio:\"\",\n            fb_id:\"\"\n        }) \n    }\n\n    componentDidMount() {\n        if (this.props.profile) {\n            const {name,bio,fb_id,id} = this.props.profile;\n            this.setState({name,bio,fb_id,id})\n        } else{\n            this.initState()\n        }\n    }\n    \n    onChange = (e) =>{\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    handleClick=()=>{\n        this.props.handleSubmit(this.state);\n        this.initState();\n    }\n\n    render() {\n        let {name,bio,fb_id} = this.state;\n        return (\n        <form className={`form-container ${this.props.mode === 'Create' ? 'form-add' : 'form-edit'}`} noValidate autoComplete=\"off\">\n            <TextField onChange={this.onChange} name=\"name\" value={name} label=\"Name\" />\n            <TextField onChange={this.onChange} name=\"bio\" value={bio} label=\"Bio\" />\n            <TextField onChange={this.onChange} name=\"fb_id\" value={fb_id} label=\"Facebook id\" />\n            <Button onClick={this.handleClick} variant=\"contained\" color=\"primary\"> {this.props.mode} </Button>\n        </form>)\n    }\n}\n\n\nexport default ProfileForm;","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api/profiles\",\n  responseType: \"json\"\n});","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport './ProfileFormAdd.css'\nimport ProfileForm from './ProfileForm';\nimport {connect} from 'react-redux';\nimport {addNewProfile} from '../actions';\n\nclass ProfileFormAdd extends React.Component {\n    handleSubmit = (profile) =>{\n        this.props.addNewProfile(profile);\n    }\n    render() {\n        return (<ProfileForm handleSubmit={this.handleSubmit} mode=\"Create\"/>);\n    }\n}\n\nexport default connect(null,{addNewProfile})(ProfileFormAdd); ","import {ADD_NEW_PROFILE,EDIT_PROFILE,GET_ALL_PROFILES, GET_PROFILE, CANCEL_SELECTED_PROFILE} from './constants';\nimport api from '../api'\nexport const getAllProfiles = () => async dispatch => {\n    const profiles = await api.get('/');\n    return dispatch({\n      type: GET_ALL_PROFILES,\n      payload:profiles.data\n    })\n  } \n\nexport const addNewProfile = (profile) => async dispatch => {\n    const result = await api.post('/',profile);\n    return dispatch({\n      type: ADD_NEW_PROFILE,\n      payload:result.data\n    })\n  }\n\n  export const editProfile = (profile) => async (dispatch) => {\n   \n    await api.put(`/${profile.id}`,profile);\n\n    return dispatch({\n      type: EDIT_PROFILE,\n      payload:profile\n    })\n  }\n\n  export const getProfile = (id) => async (dispatch) => {\n    const result = await api.get(`/${id}`);\n\n    return dispatch({\n      type: GET_PROFILE,\n      payload:result.data\n    })\n  }\n\n  export const cancelSelectedProfile = () =>{\n    return {\n      type:CANCEL_SELECTED_PROFILE,\n      payload:null\n    }\n  }\n\n\n\n","export const ADD_NEW_PROFILE = 'ADD_NEW_PROFILE';\nexport const EDIT_PROFILE = 'EDIT_PROFILE';\nexport const GET_ALL_PROFILES = 'GET_ALL_PROFILES';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const CANCEL_SELECTED_PROFILE = 'CANCEL_SELECTED_PROFILE'","import React from 'react';\nimport {AppBar} from '@material-ui/core';\nimport ProfileFormAdd from './ProfileFormAdd';\n\nclass Header extends React.Component {\n    render(){\n        return (<AppBar position=\"sticky\" color=\"default\">\n            <ProfileFormAdd />\n        </AppBar>)\n    }\n}\n\nexport default Header;","\nimport React from 'react';\nimport {Paper,Button} from '@material-ui/core';\n\nclass ProfileItem extends React.Component {\n    handleEditClick = () =>{\n        this.props.handleEditClick(this.props.id);\n    }\n\n    render() {\n        return (\n        <Paper className=\"profile-item-container\" id={this.props.id}>\n            <div className=\"profile-item-name\"> {this.props.name}</div>\n            <Button className=\"profile-item-button\" variant=\"contained\" color=\"primary\" onClick={this.handleEditClick}>Edit</Button>\n        </Paper>\n        )\n    }\n}\n\nexport default ProfileItem;","import React from 'react';\nimport avatarDefault from '../assets/avatar-default.png'\nclass Image extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        src: props.src,\n        error: false,\n      };\n    }\n  \n    onError = () => {\n      if (!this.state.error) {\n        this.setState({\n          src: avatarDefault,\n          error: true,\n        });\n      }\n    }\n  \n    render() {\n      const { src } = this.state;\n      const {src: _1,fallbackSrc: _2,...props} = this.props;\n  \n      return (\n        <img\n          style={{width:'3rem',height:'3rem',borderRadius:'50%'}}\n          src={src}\n          onError={this.onError}\n          {...props}\n        />\n      );\n    }\n  }\n\n  export default Image;\n  ","import React from 'react';\nimport ProfileForm from './ProfileForm';\nimport {Dialog,DialogContent,DialogTitle, Paper} from '@material-ui/core'; \nimport {connect} from 'react-redux';\nimport {getProfile,editProfile} from '../actions'\nimport Image from './Image';\nclass ProfileFormEdit extends React.Component {\n  componentDidMount(){\n    this.props.getProfile(this.props.id);\n  }\n\n  handleSubmit = (profile) =>{\n      this.props.handleCloseEdit()\n      this.props.editProfile(profile)\n    }\n\n    getImageSrc = () =>{\n      return `http://graph.facebook.com/${this.props.selectedProfile.fb_id}/picture`\n    }\n\n    render(){\n      if(!this.props.selectedProfile) return null;\n        return (\n        <Dialog\n            open={this.props.open}\n            onClose={this.props.handleCloseEdit}\n            fullWidth={true}\n            maxWidth={'md'}\n          >\n            <DialogTitle>Edit Profile {this.props.selectedProfile.name}\n              <Image src={this.getImageSrc()}/>\n            </DialogTitle>\n            <DialogContent>\n                <ProfileForm profile={this.props.selectedProfile}\n                             handleSubmit={this.handleSubmit}\n                             mode=\"Edit\" />\n            </DialogContent>\n          </Dialog>\n          )\n    }\n}\n\nconst mapStateToProps = ({profileReducer})=>{\n  return {selectedProfile:profileReducer.selectedProfile}\n}\n\nexport default connect(mapStateToProps,{getProfile,editProfile})(ProfileFormEdit);","import React from 'react';\nimport ProfileItem from './ProfileItem';\nimport './ProfileList.css';\nimport ProfileFormEdit from './ProfileFormEdit';\nimport {connect} from 'react-redux';\nimport {getAllProfiles,cancelSelectedProfile} from '../actions'\nclass ProfileList extends React.Component {\n    state = {}\n    componentDidMount() {\n        this.props.getAllProfiles()\n        this.setState({\n            isEditOpen:false\n        })\n    }\n\n    handleEditClick = (profile) => {\n        this.setState({selectedProfile:profile,isEditOpen:true})\n    }\n\n    handleCloseEdit = () =>{\n        this.setState({isEditOpen:false});\n\n        // Handle in case of cancel\n        this.props.cancelSelectedProfile();\n    }\n\n    renderList = () => {\n        return (\n            this.props.profiles.map(profile => {\n                return <ProfileItem {...profile} handleEditClick={this.handleEditClick}/>\n            }))\n    }\n\n    renderEditModal = () =>{\n        if(!this.state.isEditOpen) return ;\n        return <ProfileFormEdit handleCloseEdit={this.handleCloseEdit} open={this.state.isEditOpen} id={this.state.selectedProfile}/>\n    }\n\n    render() {\n        if (!this.props.profiles.length === 0) return null;\n\n        return (<>\n        <div className=\"profile-list-container\">\n            {this.renderList()}\n        </div>\n        {this.renderEditModal()}\n        </>);\n    }\n\n}\nconst mapStateToProps = ({profileReducer}) =>{\n    return {profiles:profileReducer.profiles}\n}\n\nexport default connect(mapStateToProps,{getAllProfiles,cancelSelectedProfile})(ProfileList);","import React from 'react';\nimport Header from './components/Header';\nimport ProfileList from './components/ProfileList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header/>\n     <ProfileList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_NEW_PROFILE, EDIT_PROFILE, GET_ALL_PROFILES, GET_PROFILE, CANCEL_SELECTED_PROFILE } from '../actions/constants';\nconst INITIAL_STATE = {\n    profiles: [],\n    selectedProfile: null\n}\n\nexport const profileReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_ALL_PROFILES:\n            return {\n                ...state,\n                profiles: action.payload\n            }\n        case ADD_NEW_PROFILE:\n            return {\n                ...state,\n                profiles: [...state.profiles, action.payload]\n            }\n        case EDIT_PROFILE:\n            return {\n                ...state,\n                profiles: state.profiles.map((profile) => {\n                    if (action.payload.id === profile.id) {\n                        return action.payload\n                    }\n                    else {\n                        return profile\n                    }\n                }),\n                selectedProfile:null\n            }\n        case GET_PROFILE:\n            return {\n                ...state,\n                selectedProfile: action.payload\n            }\n\n        case CANCEL_SELECTED_PROFILE:\n            return {\n                ...state,\n                selectedProfile:null\n            }\n        default:\n            return state;\n\n    }\n}\n","import {combineReducers} from 'redux';\nimport {profileReducer} from './profiles';\nconst rootReducers =  combineReducers({\n    profileReducer\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer,applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n  );\n","module.exports = __webpack_public_path__ + \"static/media/avatar-default.e8c00b50.png\";"],"sourceRoot":""}